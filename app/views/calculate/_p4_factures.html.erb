	<tr>
		<th><%= link_to_function "Factures", "$('list_factures').toggle();" %></th>
		<td></td>
		<% if @show[:date_surface] %> 
			<td></td>
			<td></td>
		<% end %>
		<td class="saison"></td>
		<td class="saison"></td>
		<% td_number_after_saison(@colonnes.length, @show[:cout_ha], @show[:cout_total]).times do %>
			<td></td>
		<% end %>
	</tr>	
<% unless (((@factures.class == Array) && @factures.size == 0) || (@factures.nil?)) %>
	<% @factures.each do |facture| %>
		<% datas = @test.res.get_saison_line_datas(@test.sid, :factures, facture.id) %>
		<% unless (facture.class.eql?(Reportable) && !Setting::SHOW_REPORTABLE) %>
			<tr id='list_factures'>
				<td class="left">
					<%#= facture.class.to_s %>
					<%= datas[:category_name] %>
					<% if facture.star? || facture.adu? %>
						✭
					<% end %>	
				</td>
				<td class="left">
					<%= link_popup_facture(datas[:id]) %>
					<% if datas[:charges_assoc] %> ☛ <% end %>
				</td>
				<% if @show[:date_surface] %> 
					<td class='date'><%= datas[:date].to_s :dmy %></td>	
					<td class='left'><%= datas[:parcelles_length].to_s %> p</td>
				<% end %>
				<td class="saison"><%= @test.res.get_saison_line(@test.sid, :factures, :all, facture.id, :ha).display(:z => true) %></td>
				<td class="saison"><%= @test.res.get_saison_line(@test.sid, :factures, :all, facture.id, :total).display(:z => true) %></td>
	
			<% rang = 0 %>
			<% @colonnes.each do |colonne| %>
				<% rang += 1 %>
				<% cout_ha = @test.res.get_line(@test.sid, @test.c, colonne.id, :factures, :all, facture.id, :ha) %>
				<% cout_total = @test.res.get_line(@test.sid, @test.c, colonne.id, :factures, :all, facture.id, :total) %>
				<% if @show[:cout_ha] %>
					<td class="<%= odd(rang) %>"><%=h cout_ha.display(:z => true) %></td>
				<% end %>
				<% if @show[:cout_total] %>
					<td class="<%= odd(rang) %>"><%=h cout_total.display(:z => true) %></td>
				<% end %>
			<% end %>
			</tr>
		<% end %>
	<% end %>
	
	<!--Sous Total Facture "factcat" (maison, invest, agri) -->
		<tr>
			<td>Total par Type</td>
			<td></td>	
			<% if @show[:date_surface] %> 
				<td></td>	
				<td></td>	
			<% end %>
			<td class="saison"></td>
			<td class="saison"></td>
			<% td_number_after_saison(@colonnes.length, @show[:cout_ha], @show[:cout_total]).times do %>
				<td></td>
			<% end %>
		</tr>	
	<% if @show[:total_type] %>
		<% for type in @types %>
			<tr class="subtotal">
				<td class="left">Type</td>
				<td class="left"><b><%= type.name %></b></td>
				<% if @show[:date_surface] %> 
					<td></td>	
					<td></td>	
				<% end %>
				<td class="saison"><%= @test.res.get_saison_line(@test.sid, :factures, :factcat, type.id, :ha).display(:z => true) %></td>
				<td class="saison"><%= @test.res.get_saison_line(@test.sid, :factures, :factcat, type.id, :total).display(:z => true) %></td>
				<% rang = 0 %>
				<% @colonnes.each do |colonne| %>
					<% rang += 1 %>
					<% cout_ha = @test.res.get_line(@test.sid, @test.c, colonne.id, :factures, :factcat, type.id, :ha).display(:z => true) %>
					<% cout_total = @test.res.get_line(@test.sid, @test.c, colonne.id, :factures, :factcat, type.id, :total).display(:z => true) %>
					<% if @show[:cout_ha] %>
						<td class="<%= odd(rang) %>"><%=h cout_ha %></td>
					<% end %>
					<% if @show[:cout_total] %>
						<td class="<%= odd(rang) %>"><%=h cout_total %></td>
					<% end %>
				<% end %>
			</tr>
		<% end %>
	<% end %>
	
	<!--Sous Total Facture "category" (cout fixes, cout variables,...) -->
	<% if @show[:total_cat] %>
		<tr>
			<td>Total par Categorie</td>
			<td></td>	
			<% if @show[:date_surface] %> 
				<td></td>	
				<td></td>	
			<% end %>
			<td class="saison"></td>
			<td class="saison"></td>
			<% td_number_after_saison(@colonnes.length, @show[:cout_ha], @show[:cout_total]).times do %>
				<td></td>
			<% end %>
		</tr>	
		<% for cat in @facture_categories %>
			<tr class="subtotal">
				<td class="left">Categorie</td>
				<td class="left"><b><%= cat.name %></b></td>
				<% if @show[:date_surface] %> 
					<td></td>	
					<td></td>	
				<% end %>
				<td class="saison"><%= @test.res.get_saison_line(@test.sid, :factures, :category, cat.id, :ha).display(:z => true) %></td>
				<td class="saison"><%= @test.res.get_saison_line(@test.sid, :factures, :category, cat.id, :total).display(:z => true) %></td>
				<% rang = 0 %>
				<% @colonnes.each do |colonne| %>
					<% rang += 1 %>
					<% cout_ha = @test.res.get_line(@test.sid, @test.c, colonne.id, :factures, :category, cat.id, :ha).display(:z => true) %>
					<% cout_total = @test.res.get_line(@test.sid, @test.c, colonne.id, :factures, :category, cat.id, :total).display(:z => true) %>
				<% if @show[:cout_ha] %>
					<td class="<%= odd(rang) %>"><%=h cout_ha %></td>
				<% end %>
				<% if @show[:cout_total] %>
					<td class="<%= odd(rang) %>"><%=h cout_total %></td>
				<% end %>
			<% end %>
			</tr>
		<% end %>
	<% end %>
	
	<!-- Total Facture -->
<tr class="total">
	<td class="left"><b>Total Factures</b></td>
	<td></td>	
	<% if @show[:date_surface] %> 
		<td></td>	
		<td></td>	
	<% end %>
	<td class="saison"><%= @test.res.get_other_line_for_saison(@test.sid, :resultats, :total_factures, :ha).display(:z => true) %></td>
	<td class="saison"><%= @test.res.get_other_line_for_saison(@test.sid, :resultats, :total_factures, :total).display(:z => true) %></td>	
	<% rang = 0 %>
	<% @colonnes.each do |colonne| %>
		<% rang += 1 %>
		<% cout_ha = @test.res.get_other_line(@test.sid, @test.c, colonne.id, :resultats, :total_factures, :ha).display(:z => true) %>
		<% cout_total = @test.res.get_other_line(@test.sid, @test.c, colonne.id, :resultats, :total_factures, :total).display(:z => true) %>
		<% if @show[:cout_ha] %>
			<td class="<%= odd(rang) %>_subtotal"><%=h cout_ha %></td>
		<% end %>
		<% if @show[:cout_total] %>
			<td class="<%= odd(rang) %>_subtotal"><%=h cout_total %></td>
		<% end %>
	<% end %>
</tr>
<% end %>