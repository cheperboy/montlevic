- name = "#{@factcat.code}.produits_used#{print_way(cat)}"
- @line +=1
%tr{:class => "level-#{cat.depth}_#{name}"}
	%td.col0= xls_sum_sub_cat_produit(@line, cat)
	- decal = cat.depth + 1
	- (decal).times do
		%td.col1
	%td.col2
		%b
			= cat.name
	- (@max_depth - decal).times do
		%td.col3
	%td.saison= delim_xls(@test.res.get_saison_line(@test.sid, :putoproduits, :category, cat.id, :ha))
	%td.saison= delim_xls(@test.res.get_saison_line(@test.sid, :putoproduits, :category, cat.id, :total))
	- rang = 0
	- @colonnes.each do |colonne|
		- rang += 1
		- cout_ha = delim_xls(@test.res.get_line(@test.sid, @test.c, colonne.id, :putoproduits, :category, cat.id, :ha))
		- cout_total = delim_xls(@test.res.get_line(@test.sid, @test.c, colonne.id, :putoproduits, :category, cat.id, :total))
		%td{:class => "color_culture_#{colonne.code}"}= h cout_ha
		%td{:class => "color_culture_#{colonne.code}"}= h cout_total
- if cat.has_children?
	- cat.children.each do |cat|
		= render(:partial => "calculate/xls/c22_produits_cat", :locals => { :cat => cat, :factcat => factcat })
- else
	- cat.produits.find_by_saison(:all).each do |produit|
		= render(:partial => "calculate/xls/c23_produits_elt", :locals => {	:cat => cat, :factcat => @factcat, :produit => produit, :name => name })
