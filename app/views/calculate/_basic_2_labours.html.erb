	<tr>
		<th><%= link_to_function "Labours", "$('list_labours').toggle();" %></th>
<% td_number(@colonnes.length, @show[:cout_ha], @show[:cout_total]).times do %>
		<td></td>
<% end %>
	</tr>

<% unless (((@labours.class == Array) && @labours.size == 0) || (@labours.nil?)) %>
	<% if @show[:labours] %>
		<% @labours.each do |labour| %>
			<% datas = @test.res.get_saison_line_datas(@test.sid, :labours, labour.id) %>
			<tr>
				<td class='left'><strong><%= datas[:category_name] %></strong></td>
				<td class='left'>
					<%= link_popup_labour(datas[:id]) %> 
					<% if datas[:factures_assoc] %>
						*
					<% end %>
				</td>
				<td><%= datas[:date].to_s :dmy %></td>	
				<td>
					<%= datas[:parcelles_length] %> p - 
					<%= pretty(datas[:surface_total]) %> ha
				</td>
				<td><%= pretty(@test.res.get_saison_line(@test.sid, :labours, :all, labour.id, :ha)) %></td>
				<td><%= pretty(@test.res.get_saison_line(@test.sid, :labours, :all, labour.id, :total)) %></td>
			<% rang = 0 %>
			<% @colonnes.each do |colonne| %>
				<% rang += 1 %>
				<% cout_ha = pretty(@test.res.get_line(@test.sid, @test.c, colonne.id, :labours, :all, labour.id, :ha)) %>
				<% cout_total = pretty(@test.res.get_line(@test.sid, @test.c, colonne.id, :labours, :all, labour.id, :total)) %>
				
				<% td_class = odd(rang) %>
				<% if @show[:cout_ha] %>
					<td class="<%= td_class %>"><%=h cout_ha %></td>
				<% end %>
				<% if @show[:cout_total] %>
					<td class="<%= td_class %>"><%=h cout_total %></td>
				<% end %>
			<% end %>
			</tr>
		<% end %>
	<% end %>

	<!--Sous Total Pulve "category" (desherbant, fongicide,...) -->
	<% if @show[:total_cat] %>
		<tr>
			<td>Total par Categorie</td>
			<% td_number(@colonnes.length, @show[:cout_ha], @show[:cout_total]).times do %>
					<td></td>
			<% end %>
		</tr>	
		<% for cat in @labour_categories %>
			<tr class="subtotal">
				<td class="left">Categorie</td>
				<td class="left"><b><%= cat.name %></b></td>
				<td></td>
				<td></td>
				<td><%= @test.res.get_saison_line(@test.sid, :labours, :category, cat.id, :ha) %></td>
				<td><%= @test.res.get_saison_line(@test.sid, :labours, :category, cat.id, :total) %></td>
				<% rang = 0 %>
				<% @colonnes.each do |colonne| %>
					<% rang += 1 %>
					<% cout_ha = @test.res.get_line(@test.sid, @test.c, colonne.id, :labours, :category, cat.id, :ha) %>
					<% cout_total = @test.res.get_line(@test.sid, @test.c, colonne.id, :labours, :category, cat.id, :total) %>
					<% if @show[:cout_ha] %>
						<td class="<%= odd(rang) %>"><%=h cout_ha %></td>
					<% end %>
					<% if @show[:cout_total] %>
						<td class="<%= odd(rang) %>"><%=h cout_total %></td>
					<% end %>
				<% end %>
			</tr>
		<% end %>
	<% end %>
<!-- FIN Ajout pour test par type -->

	<tr class="total">
		<td id="nom">Total Labour:	</td>
		<td></td>
		<td></td>
		<td></td>
		<td><%= pretty(@test.res.get_other_line_for_saison(@test.sid, :resultats, :total_labours, :ha)) %></td>
		<td><%= pretty(@test.res.get_other_line_for_saison(@test.sid, :resultats, :total_labours, :total)) %></td>	
		<% rang = 0 %>
		<% @colonnes.each do |colonne| %>
			<% rang += 1 %>
			<% cout_ha = pretty(@test.res.get_other_line(@test.sid, @test.c, colonne.id, :resultats, :total_labours, :ha)) %>
			<% cout_total = pretty(@test.res.get_other_line(@test.sid, @test.c, colonne.id, :resultats, :total_labours, :total)) %>
			<% if @show[:cout_ha] %>
				<td class="<%= odd(rang) %>_subtotal"><%=h cout_ha %></td>
			<% end %>
			<% if @show[:cout_total] %>
				<td class="<%= odd(rang) %>_subtotal"><%=h cout_total %></td>
			<% end %>
		<% end %>
	</tr>

<% end %>